{"mappings":"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","sources":["public/js/alert.js","public/js/login.js","public/js/mapbox.js","public/js/updateSettings.js","public/js/stripe.js","public/js/signUp.js","public/js/reviewsSlider.js","public/js/index.js"],"sourcesContent":["export const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n// type is 'success' or 'error'\nexport const showAlert = (type, msg, time = 5) => {\n  hideAlert();\n  \n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`\n  document.querySelector('body')\n          .insertAdjacentHTML('afterbegin', markup);\n  \n  window.setTimeout(hideAlert, time * 1000);\n}\n","import axios         from 'axios';\nimport { showAlert } from './alert';\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      // url: 'http://127.0.0.1:3000/api/v1/users/login',\n      url: '/api/v1/users/login',\n      // url: 'localhost:3000/api/v1/users/login',\n      // baseURL: 'localhost:3000/api/v1/users/login',\n      // url: 'http://127.0.0.1:3000/api/v1/users/login',\n      //\n      data: {\n        email: email,\n        password: password\n      }\n    });\n    \n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successful');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n    \n  } catch (e) {\n    showAlert('error', e.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n    if ((\n        res.data.status = 'success'\n    )) {\n      window.setTimeout(() => {\n        location.assign('/')\n      }, 1500)\n    }\n  } catch (e) {\n    showAlert('error', e.response.data.message, 'Error logging out! Try'\n                                                + ' again.');\n  }\n};\n","import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\n\n// mapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\n// var map = new mapboxgl.Map({\n//   container: 'YOUR_CONTAINER_ELEMENT_ID',\n//   style: 'mapbox://styles/mapbox/streets-v11'\n// });\n\nexport const displayMap = (locations) => {\n  mapboxgl.accessToken =\n      'pk.eyJ1IjoiY2hhb3Ntb3MiLCJhIjoiY2w1NzRka200MGJ6NjNkbnJiZ3p2bmE0dSJ9.TXqs-zdQ4imeEM5q6Qgxkw';\n  \n  const map = new mapboxgl.Map({\n    container: 'map', // container ID\n    style: 'mapbox://styles/chaosmos/cl57609oo005m14pn7xcnjhz2', // style URL\n    center: [ -118.113491, 34.111745 ], // starting position [lng, lat]\n    zoom: 10, // starting zoom\n    scrollZoom: false\n    //projection: 'globe' // display the map as a 3D globe\n  });\n  \n  map.on('style.load', () => {\n    map.setFog({}); // Set the default atmosphere style\n  });\n  \n  const bounds = new mapboxgl.LngLatBounds();\n  \n  locations.forEach(loc => {\n    // create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n    \n    // add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom'\n    }).setLngLat(loc.coordinates)\n      .addTo(map);\n    \n    // add popup\n    new mapboxgl.Popup({\n      offset: 30\n    })\n        .setLngLat(loc.coordinates)\n        .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n        .addTo(map);\n    // extend map bounds to include current location\n    bounds.extend(loc.coordinates)\n  });\n  \n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 100,\n      left: 100,\n      right: 100\n    }\n  });\n\n// map.on('style.load', () => {\n//   map.setFog({\n//     color: 'rgb(186, 210, 235)', // Lower atmosphere\n//     'high-color': 'rgb(36, 92, 223)', // Upper atmosphere\n//     'horizon-blend': 0.02, // Atmosphere thickness (default 0.2 at low zooms)\n//     'space-color': 'rgb(11, 11, 25)', // Background color\n//     'star-intensity': 0.6 // Background star brightness (default 0.35 at low\n//                           // zoooms )\n//   });\n// });\n}\n","import axios         from 'axios'\nimport { showAlert } from './alert';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const url = type === 'password'\n                ? '/api/v1/users/updateMyPassword'\n                : '/api/v1/users/updateMe'\n    \n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data\n    });\n    \n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} Data updated successfully!`)\n    }\n    \n    setTimeout(() => {\n      location.reload();\n    }, 900)\n    \n  } catch (e) {\n    showAlert('error', e.response.data.message)\n  }\n};\n","import axios         from 'axios';\nimport { showAlert } from './alert';\n\nconst stripe = Stripe(\n    'pk_test_51LJadxCOpTT3xkBxeE5MTRWS6JZHtyEEt1qx4DqPLeM4N6f7nseAOHDEeA6q0HCsCIJiFRuTXohZcDNJDSrHZgJR00eBPke8YJ');\n\nexport const bookTour = async tourId => {\n  try {\n    // 1) Get checkout session from API\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`)\n    \n    // 2) Create a checkout form + change credit card\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id\n    });\n  } catch (e) {\n    console.log(e);\n    showAlert('error', e);\n  }\n}\n","import axios         from 'axios';\nimport { showAlert } from './alert';\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/signup',\n      data: {\n        name: name,\n        email: email,\n        password: password,\n        passwordConfirm: passwordConfirm,\n      },\n    });\n    \n    console.log('hello from sign up!');\n    \n    if (res.data.status === 'success') {\n      showAlert('success', 'Account created successfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n    console.log('hello from sign up!');\n    \n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","// core version + navigation, pagination modules:\nimport Swiper, { Navigation } from 'swiper';\n// import Swiper and modules styles\n// import 'swiper/css';\n// import 'swiper/css/navigation';\n\n// init Swiper:\nconst swiper = new Swiper('.reviews', {\n  // configure Swiper to use modules\n  modules: [ Navigation ],\n  slidesPerView: 'auto',\n  loop: true,\n  \n  breakpoints: {\n    \n    300: {\n      slidesPerView: 1.5,\n      spaceBetween: 15,\n    },\n    \n    768: {\n      slidesPerView: 2,\n      spaceBetween: 20,\n    },\n    \n    1280: {\n      slidesPerView: 3,\n      spaceBetween: 30,\n    },\n    \n    1920: {\n      slidesPerView: 5,\n      spaceBetween: 45,\n    }\n    \n  },\n  \n  navigation: {\n    nextEl: '.swiper-button-next',\n    prevEl: '.swiper-button-prev',\n  }\n  \n  // And if we need scrollbar\n  // scrollbar: {\n  //   el: '.swiper-scrollbar',\n  // }\n});\n\nexport default swiper;\n","// import '@babel/polyfill';\nimport { showAlert }      from './alert';\nimport { login, logout }  from './login';\nimport { displayMap }     from './mapbox';\nimport { updateSettings } from './updateSettings';\nimport { bookTour }       from './stripe';\nimport { signUp }         from './signUp';\nimport swiper             from './reviewsSlider';\n\n// DOM Elements\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\nconst signUpForm = document.querySelector('.signup-form');\n\n// delegation\nif (mapBox) {\n  let locations = JSON.parse(mapBox.dataset.locations);\n  \n  displayMap(locations);\n}\n\nif (signUpForm) {\n  signUpForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    \n    // Change button text while Signing up a new user\n    document.querySelector('.btn--signup').innerText = 'Signing...';\n    \n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await signUp(name, email, password, passwordConfirm);\n    \n    // Change button text and clear input-fields after Signing up new user\n    document.querySelector('.btn--signup').innerText = 'Sign Up';\n    signUpForm.reset();\n  });\n}\n\nif (loginForm) {\n  document.querySelector('.form')\n          .addEventListener('submit', e => {\n            e.preventDefault();\n            const email = document.getElementById('email').value;\n            const password = document.getElementById('password').value;\n            login(email, password);\n          })\n}\n\nif (logOutBtn) {\n  logOutBtn.addEventListener('click', logout);\n}\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value)\n    form.append('email', document.getElementById('email').value)\n    // const email = document.getElementById('email').value;\n    // const name = document.getElementById('name').value;\n    form.append('photo', document.getElementById('photo').files[0]);\n    // console.log(form);\n    \n    updateSettings(form, 'data');\n  })\n}\n\nif (userPasswordForm) {\n  userPasswordForm.addEventListener('submit', async e => {\n    e.preventDefault();\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n    \n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    \n    await updateSettings(\n        { passwordCurrent, password, passwordConfirm },\n        'password'\n    );\n    \n    document.querySelector('.btn--save-password').textContent = 'Save Password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  })\n}\n\nif (bookBtn) {\n  bookBtn.addEventListener('click', e => {\n    e.target.textContent = 'Processing...';\n    const { tourId } = e.target.dataset;\n    bookTour(tourId);\n  })\n}\n\nconst alertMessage = document.querySelector('body').dataset.alert;\nif (alert) {\n  showAlert('success', alertMessage, 20);\n}\n\nconsole.log('h! from index.js!!!')\n"],"names":["$e3f7868303ccf5e8$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$e3f7868303ccf5e8$export$de026b00723010c1","type","msg","time","markup","insertAdjacentHTML","window","setTimeout","$45ec7c4b86426e27$export$596d806903d1f59e","async","email","password","$parcel$interopDefault","$hynEF$axios","method","url","data","status","location","assign","e","response","message","$f18800bef1566ae4$export$4c5dd147b21b9176","locations","$hynEF$mapboxgldistmapboxgljs","accessToken","map","Map","container","style","center","zoom","scrollZoom","on","setFog","bounds","LngLatBounds","forEach","loc","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","$0960225c3bfae747$export$f558026a994b6051","toUpperCase","reload","$b1f537cf7553ae0b$var$stripe","Stripe","$b1f537cf7553ae0b$export$8d5bdbf26681c0c2","tourId","session","redirectToCheckout","sessionId","id","console","log","$3db54dc53b60e995$export$cf64224bcd829024","name","passwordConfirm","res","err","$hynEF$swiper","modules","Navigation","slidesPerView","loop","breakpoints","spaceBetween","navigation","nextEl","prevEl","$3d55ea857cbc544c$var$mapBox","getElementById","$3d55ea857cbc544c$var$loginForm","$3d55ea857cbc544c$var$logOutBtn","$3d55ea857cbc544c$var$userDataForm","$3d55ea857cbc544c$var$userPasswordForm","$3d55ea857cbc544c$var$bookBtn","$3d55ea857cbc544c$var$signUpForm","JSON","parse","dataset","addEventListener","preventDefault","innerText","value","reset","form","FormData","append","files","textContent","passwordCurrent","target","$3d55ea857cbc544c$var$alertMessage","alert"],"version":3,"file":"index.js.map","sourceRoot":"../../../../"}